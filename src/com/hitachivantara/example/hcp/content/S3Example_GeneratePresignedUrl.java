package com.hitachivantara.example.hcp.content;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Date;

import com.amazonaws.HttpMethod;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.model.GeneratePresignedUrlRequest;
import com.amazonaws.services.s3.model.S3Object;
import com.amituofo.common.util.StreamUtils;
import com.hitachivantara.example.hcp.util.Account;
import com.hitachivantara.example.hcp.util.HCPClients;

/**
 * Temporary access link can be generated by presigning, which can meet the requirement of data access without key
 * 
 * @author sohan
 *
 */
public class S3Example_GeneratePresignedUrl {

	public static void main(String[] args) throws IOException {
		AmazonS3 hs3Client = HCPClients.getInstance().getS3Client();

		// Here is the file will be uploaded into HCP
		// String objectKey = "/7-Zip/apache-tomcat-7.0.78/RUNNING.txt";
		String objectKey = "MailContent2/index.shtml";// "/7-Zip/apache-tomcat-7.0.78/lib/catalina.jar";
		// The location in HCP where this file will be stored.
		String bucketName = Account.namespace;

		// 公开链接有效期截至时间
		// Add 1 minute.
		Date expiration = new Date(System.currentTimeMillis() + 1000 * 60 * 1);

		// 通过预签名读取对象
		{
			// 生成预签名时间
			URL urlForGet = hs3Client.generatePresignedUrl(new GeneratePresignedUrlRequest(bucketName, objectKey).withExpiration(expiration).withMethod(HttpMethod.GET));
			System.out.println("-------------------Get Object Content by URL--------------------");
			System.out.println(urlForGet.toString());

			HttpURLConnection connection = (HttpURLConnection) urlForGet.openConnection();
			connection.setDoInput(true);
			connection.setRequestMethod("GET");
			InputStream in = connection.getInputStream();
			StreamUtils.inputStreamToConsole(in, true);
			connection.disconnect();

			System.out.println();
			System.out.println("----------------------------------------------------------------");
		}

		// 通过预签名写入对象
		{
			System.out.println("-------------------Put Object Content by URL--------------------");
			objectKey = "backup/test-" + System.currentTimeMillis() + ".txt";
			URL urlForPut = hs3Client.generatePresignedUrl(new GeneratePresignedUrlRequest(bucketName, objectKey).withExpiration(expiration).withMethod(HttpMethod.PUT));
			System.out.println(urlForPut.toString());

			// Create the connection and use it to upload the new object using the pre-signed URL.
			HttpURLConnection connection = (HttpURLConnection) urlForPut.openConnection();
			connection.setDoOutput(true);
			connection.setRequestMethod("PUT");
			OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream());
			out.write("This text uploaded as an object via presigned URL.");
			out.close();

			// Check the HTTP response code. To complete the upload and make the object available,
			// you must interact with the connection object in some way.
			connection.getResponseCode();
			System.out.println("HTTP response code: " + connection.getResponseCode());
			connection.disconnect();

			// Check to make sure that the object was uploaded successfully.
			S3Object object = hs3Client.getObject(bucketName, objectKey);
			System.out.println("Object " + object.getKey() + " created in bucket " + object.getBucketName());
			StreamUtils.inputStreamToConsole(object.getObjectContent(), true);
			System.out.println();
			System.out.println("----------------------------------------------------------------");
		}
	}

}
